Kubernetes Installation 

Requirement:
1.  Install Docker:

	sudo apt-get update
	sudo apt-get install docker.io
	docker ––version


2. Start and Enable Docker:
	sudo systemctl enable docker
	sudo systemctl status docker
	sudo systemctl start docker

	-->Repeat on all the other nodes.


3.Add Kubernetes Signing Key
	curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add

	sudo apt-get install curl


4.Add Software Repositories

	sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"

5.Kubernetes Installation Tools	
	sudo apt-get install kubeadm kubelet kubectl

	sudo apt-mark hold kubeadm kubelet kubectl

	kubeadm version

	-->Repeat for each server node.


Kubernetes Deployment:
6. Begin Kubernetes Deployment
	sudo swapoff –a


7.Assign Unique Hostname for Each Server Node :
for masternode:
	sudo hostnamectl set-hostname master-node
For Workernode:
	sudo hostnamectl set-hostname worker01


8.Initialize Kubernetes on Master Node
Inside Master Node:
	sudo kubeadm init --pod-network-cidr=10.244.0.0/16

Note:Once this command finishes, 
it will display a kubeadm join message at the end

create a directory for the cluster:
	mkdir -p $HOME/.kube

	sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config

	sudo chown $(id -u):$(id -g) $HOME/.kube/config

9.Deploy Pod Network to Cluster
	Note: A Pod Network is a way to allow communication between
	different nodes in the cluster.
	
	sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

Verify that everything is running and communicating::
	kubectl get pods --all-namespaces

10.Join Worker Node to Cluster

	kubeadm join --discovery-token abcdef.1234567890abcdef --discovery-token-ca-cert-hash sha256:1234..cdef 1.2.3.4:6443

Get al node list:
Switch to the master server, and enter:

	kubectl get nodes
